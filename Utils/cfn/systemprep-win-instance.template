{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description" : "This template deploys a Windows instance with the SystemPrep bootstrapper to apply the DISA STIG.",
    "Parameters" :
    {
        "AmiId" :
        {
            "Description" : "ID of the AMI to launch",
            "Type" : "String",
            "AllowedPattern" : "^ami-[0-9a-z]{8}$|^ami-[0-9a-z]{17}$"
        },
        "AppScriptParams" :
        {
            "Description" : "Parameter string to pass to the application script. This parameter is ignored unless \"AppScriptUrl\" is provided",
            "Type" : "String"
        },
        "AppScriptShell" :
        {
            "Description" : "Shell with which to execute the application script. This parameter is ignored unless \"AppScriptUrl\" is provided",
            "Type" : "String",
            "Default" : "powershell",
            "AllowedValues" :
            [
                "cmd",
                "powershell"
            ]
        },
        "AppScriptUrl" :
        {
            "Description" : "URL to the application script. Leave blank to launch without an application script",
            "Type" : "String",
            "Default" : "",
            "AllowedPattern" : "^$|^http://.*$|^https://.*$"
        },
        "AppVolumeDevice" :
        {
            "Description" : "Device to mount an extra EBS volume. Leave blank to launch without an extra application volume",
            "Type" : "String",
            "Default" : "",
            "AllowedValues" :
            [
                "",
                "xvdf",
                "xvde",
                "xvdg",
                "xvdh",
                "xvdi"
            ]
        },
        "AppVolumeType" :
        {
            "Description" : "Type of EBS volume to create. Ignored if \"AppVolumeDevice\" is blank",
            "Type" : "String",
            "Default" : "gp2",
            "AllowedValues" :
            [
                "gp2",
                "io1",
                "sc1",
                "st1",
                "standard"
            ]
        },
        "AppVolumeSize" :
        {
            "Description" : "Size in GB of the EBS volume to create. Ignored if \"AppVolumeDevice\" is blank",
            "Type" : "Number",
            "Default" : "1",
            "MinValue": "1",
            "MaxValue": "16384",
            "ConstraintDescription" : "Must be between 1GB and 16384GB."
        },
        "KeyPairName" :
        {
            "Description" : "Public/private key pairs allow you to securely connect to your instance after it launches",
            "Type" : "AWS::EC2::KeyPair::KeyName"
        },
        "InstanceType" :
        {
            "Description" : "Amazon EC2 instance type",
            "Type" : "String",
            "Default" : "t2.micro",
            "AllowedValues" :
            [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "c4.large",
                "c4.xlarge",
                "m4.large",
                "m4.xlarge"
            ]
        },
        "InstanceRole" :
        {
            "Description" : "IAM instance role to apply to the instance(s)",
            "Type" : "String",
            "Default" : ""
        },
        "NoPublicIp" :
        {
            "Description" : "Controls whether to assign the instance a public IP. Recommended to leave at \"true\" _unless_ launching in a public subnet",
            "Type" : "String",
            "Default" : "true",
            "AllowedValues" :
            [
                "false",
                "true"
            ]
        },
        "NoReboot" :
        {
            "Description" : "Controls whether to reboot the instance as the last step of cfn-init execution",
            "Type" : "String",
            "Default" : "false",
            "AllowedValues" :
            [
                "false",
                "true"
            ]
        },
        "SecurityGroupIds" :
        {
            "Description" : "List of security groups to apply to the instance",
            "Type" : "List<AWS::EC2::SecurityGroup::Id>"
        },
        "SubnetId" :
        {
          "Type" : "AWS::EC2::Subnet::Id",
          "Description" : "ID of the subnet to assign to the instance"
        },
        "SystemPrepBootstrapUrl" :
        {
            "Description" : "URL to the SystemPrep Bootstrapper",
            "Type" : "String",
            "Default" : "https://s3.amazonaws.com/systemprep/BootStrapScripts/SystemPrep-Bootstrap--Windows.ps1",
            "AllowedPattern" : "^http://.*\\.ps1$|^https://.*\\.ps1$"
        },
        "SystemPrepEnvironment" :
        {
            "Description" : "Environment in which the instance is being deployed",
            "Type" : "String",
            "Default" : "$false",
            "AllowedValues" :
            [
                "$false",
                "dev",
                "test",
                "prod"
            ]
        },
        "SystemPrepOuPath" :
        {
            "Description" : "DN of the OU to place the instance when joining a domain. If blank and \"SystemPrepEnvironment\" enforces a domain join, the instance will be placed in a default container. Leave blank if not joining a domain, or if \"SystemPrepEnvironment\" is \"$false\"",
            "Type" : "String",
            "Default" : "",
            "AllowedPattern" : "^$|^(OU=.+,)+(DC=.+)+$"
        },
        "SystemPrepAdminGroups" :
        {
            "Description" : "Colon-separated list of domain groups that should have admin permissions on the EC2 instance",
            "Type" : "String",
            "Default" : ""
        },
        "CfnEndpointUrl" :
        {
            "Description" : "URL to the CloudFormation Endpoint. e.g. https://cloudformation.us-east-1.amazonaws.com",
            "Type" : "String",
            "Default" : "",
            "AllowedPattern" : "^$|^http://.*$|^https://.*$"
        },
        "ToggleCfnInitUpdate" :
        {
            "Description" : "A/B toggle that forces a change to instance metadata, triggering the cfn-init update sequence",
            "Type" : "String",
            "Default" : "A",
            "AllowedValues" :
            [
                "A",
                "B"
            ]
        }
    },
    "Conditions" :
    {
        "ExecuteAppScript" :
        {
            "Fn::Not" : [ { "Fn::Equals" : [ { "Ref" : "AppScriptUrl" }, "" ] } ]
        },
        "CreateAppVolume" :
        {
            "Fn::Not" : [ { "Fn::Equals" : [ { "Ref" : "AppVolumeDevice" }, "" ] } ]
        },
        "UseOuPath" :
        {
            "Fn::Not" : [ { "Fn::Equals" : [ { "Ref" : "SystemPrepOuPath" }, "" ] } ]
        },
        "UseAdminGroups" :
        {
            "Fn::Not" : [ { "Fn::Equals" : [ { "Ref" : "SystemPrepAdminGroups" }, "" ] } ]
        },
        "UseCfnUrl" :
        {
            "Fn::Not" : [ { "Fn::Equals" : [ { "Ref" : "CfnEndpointUrl" }, "" ] } ]
        },
        "Reboot" :
        {
            "Fn::Not" : [ { "Fn::Equals" : [ { "Ref" : "NoReboot" }, "true" ] } ]
        },
        "AssignInstanceRole" :
        {
            "Fn::Not" : [ { "Fn::Equals" : [ { "Ref" : "InstanceRole" }, "" ] } ]
        },
        "AssignPublicIp" :
        {
            "Fn::Not" : [ { "Fn::Equals" : [ { "Ref" : "NoPublicIp" }, "true" ] } ]
        }
    },
    "Mappings" :
    {
        "ShellCommandMap" :
        {
            "powershell" :
            {
                "command" : "powershell.exe -NoLogo -NoProfile -NonInteractive -ExecutionPolicy Bypass"
            },
            "cmd" :
            {
                "command" : "cmd.exe"
            }
        }
    },
    "Metadata" :
    {
        "AWS::CloudFormation::Interface" :
        {
            "ParameterGroups" :
            [
                {
                    "Label" :
                    {
                      "default" : "EC2 Instance Configuration"
                    },
                    "Parameters" :
                    [
                        "AmiId",
                        "AmiDistro",
                        "InstanceType",
                        "InstanceRole",
                        "KeyPairName",
                        "NoPublicIp",
                        "NoReboot",
                        "NoUpdates",
                        "SecurityGroupIds"
                    ]
                },
                {
                    "Label" :
                    {
                      "default" : "EC2 SystemPrep Configuration"
                    },
                    "Parameters" :
                    [
                        "SystemPrepBootstrapUrl",
                        "SystemPrepEnvironment",
                        "SystemPrepOuPath",
                        "SystemPrepAdminGroups"
                    ]
                },
                {
                    "Label" :
                    {
                        "default" : "EC2 Application Configuration"
                    },
                    "Parameters" :
                    [
                        "AppScriptUrl",
                        "AppScriptParams",
                        "AppScriptShell"
                    ]
                },
                {
                    "Label" :
                    {
                        "default" : "EC2 Application EBS Volume"
                    },
                    "Parameters" :
                    [
                        "AppVolumeDevice",
                        "AppVolumeSize",
                        "AppVolumeType"
                    ]
                },
                {
                    "Label" :
                    {
                        "default" : "Network Configuration"
                    },
                    "Parameters" :
                    [
                        "SubnetId"
                    ]
                },
                {
                    "Label" :
                    {
                        "default" : "CloudFormation Configuration"
                    },
                    "Parameters" :
                    [
                        "CfnEndpointUrl",
                        "ToggleCfnInitUpdate"
                    ]
                }
            ],
            "ParameterLabels" :
            {
                "ToggleCfnInitUpdate" :
                {
                    "default" : "Force Cfn Init Update"
                }
            }
        }
    },
    "Resources" :
    {
        "SystemPrepInstance" :
        {
            "Type" : "AWS::EC2::Instance",
            "CreationPolicy" :
            {
                "ResourceSignal" :
                {
                    "Count" : "1",
                    "Timeout" : "PT60M"
                }
            },
            "Metadata" : {
                "ToggleCfnInitUpdate" : { "Ref" : "ToggleCfnInitUpdate" },
                "AWS::CloudFormation::Init" :
                {
                    "configSets" :
                    {
                        "launch" :
                        [
                            "setup",
                            "systemprep-launch",
                            {
                                "Fn::If" :
                                [
                                    "ExecuteAppScript",
                                    "make-app",
                                    { "Ref" : "AWS::NoValue" }
                                ]
                            },
                            {
                                "Fn::If" :
                                [
                                    "Reboot",
                                    "reboot",
                                    { "Ref" : "AWS::NoValue" }
                                ]
                            },
                            "finalize"
                        ],
                        "update" :
                        [
                            "setup",
                            "systemprep-update",
                            {
                                "Fn::If" :
                                [
                                    "ExecuteAppScript",
                                    "make-app",
                                    { "Ref" : "AWS::NoValue" }
                                ]
                            },
                            {
                                "Fn::If" :
                                [
                                    "Reboot",
                                    "reboot",
                                    { "Ref" : "AWS::NoValue" }
                                ]
                            },
                            "finalize"
                        ]
                    },
                    "setup" :
                    {
                        "files" :
                        {
                            "c:\\cfn\\cfn-hup.conf" :
                            {
                                "content" :
                                { "Fn::Join" : ["", [
                                    "[main]\n",
                                    "stack=", { "Ref" : "AWS::StackId" }, "\n",
                                    "region=", { "Ref" : "AWS::Region" }, "\n",
                                    {
                                        "Fn::If" :
                                        [
                                            "AssignInstanceRole",
                                            { "Fn::Join" : [ "", [
                                                "role=",
                                                { "Ref" : "InstanceRole" },
                                                "\n"
                                            ] ] },
                                            ""
                                        ]
                                    },
                                    {
                                        "Fn::If" :
                                        [
                                            "UseCfnUrl",
                                            { "Fn::Join" : [ "", [
                                                "url=",
                                                { "Ref" : "CfnEndpointUrl" },
                                                "\n"
                                            ] ] },
                                            ""
                                        ]
                                    },
                                    "interval=1", "\n",
                                    "verbose=true", "\n"
                                ]]}
                            },
                            "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf" :
                            {
                                "content" :
                                { "Fn::Join" : ["", [
                                    "[cfn-auto-reloader-hook]\n",
                                    "triggers=post.update\n",
                                    "path=Resources.SystemPrepInstance.Metadata\n",
                                    "action=cfn-init.exe -v -c update",
                                    " --stack ", { "Ref" : "AWS::StackName" },
                                    " --resource SystemPrepInstance",
                                    {
                                        "Fn::If" :
                                        [
                                            "AssignInstanceRole",
                                            { "Fn::Join" : [ "", [
                                                " --role ",
                                                { "Ref" : "InstanceRole" }
                                            ] ] },
                                            ""
                                        ]
                                    },
                                    {
                                        "Fn::If" :
                                        [
                                            "UseCfnUrl",
                                            { "Fn::Join" : [ "", [
                                                " --url ",
                                                { "Ref" : "CfnEndpointUrl" }
                                            ] ] },
                                            ""
                                        ]
                                    },
                                    " --region ", { "Ref" : "AWS::Region" }, "\n"
                                ]]}
                            },
                            "c:\\cfn\\scripts\\systemprep-bootstrapper.ps1" :
                            {
                                "source" : { "Ref" : "SystemPrepBootstrapUrl" }
                            }
                        },
                        "services" :
                        {
                            "windows" :
                            {
                                "cfn-hup" :
                                {
                                    "enabled" : "true",
                                    "ensureRunning" : "true",
                                    "files" :
                                    [
                                        "c:\\cfn\\cfn-hup.conf",
                                        "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    },
                    "systemprep-launch" :
                    {
                        "commands" :
                        {
                            "10-systemprep-launch" :
                            {
                                "command" :
                                { "Fn::Join" : [ "", [
                                    { "Fn::FindInMap" :
                                        [
                                            "ShellCommandMap",
                                            "powershell",
                                            "command"
                                        ]
                                    },
                                    " c:\\cfn\\scripts\\systemprep-bootstrapper.ps1",
                                    " -NoReboot \"$true\"",
                                    " -EntEnv \"",
                                    { "Ref" : "SystemPrepEnvironment" },
                                    "\"",
                                    {
                                        "Fn::If" :
                                        [
                                            "UseOuPath",
                                            { "Fn::Join" : [ "", [
                                                " -OuPath \"",
                                                { "Ref" : "SystemPrepOuPath" },
                                                "\""
                                            ]]},
                                            ""
                                        ]
                                    },
                                    {
                                        "Fn::If" :
                                        [
                                            "UseAdminGroups",
                                            { "Fn::Join" : [ "", [
                                                " -AdminGroups \"",
                                                { "Ref" : "SystemPrepAdminGroups" },
                                                "\""
                                            ]]},
                                            ""
                                        ]
                                    }
                                ]]},
                                "waitAfterCompletion" : "0"
                            }
                        }
                    },
                    "systemprep-update" :
                    {
                        "commands" :
                        {
                            "10-systemprep-update" :
                            {
                                "command" :
                                { "Fn::Join" : [ "", [
                                    { "Fn::FindInMap" :
                                        [
                                            "ShellCommandMap",
                                            "powershell",
                                            "command"
                                        ]
                                    },
                                    " c:\\cfn\\scripts\\systemprep-bootstrapper.ps1",
                                    " -SaltStates None",
                                    " -NoReboot \"$true\"",
                                    " -EntEnv \"",
                                    { "Ref" : "SystemPrepEnvironment" },
                                    "\"",
                                    {
                                        "Fn::If" :
                                        [
                                            "UseOuPath",
                                            { "Fn::Join" : [ "", [
                                                " -OuPath \"",
                                                { "Ref" : "SystemPrepOuPath" },
                                                "\""
                                            ]]},
                                            ""
                                        ]
                                    },
                                    {
                                        "Fn::If" :
                                        [
                                            "UseAdminGroups",
                                            { "Fn::Join" : [ "", [
                                                " -AdminGroups \"",
                                                { "Ref" : "SystemPrepAdminGroups" },
                                                "\""
                                            ]]},
                                            ""
                                        ]
                                    }
                                ]]},
                                "waitAfterCompletion" : "0"
                            }
                        }
                    },
                    "make-app" :
                    {
                        "files" :
                        {
                            "c:\\cfn\\scripts\\make-app" :
                            {
                                "source" : { "Ref" : "AppScriptUrl" }
                            }
                        },
                        "commands" :
                        {
                            "10-make-app" :
                            {
                                "command" :
                                { "Fn::Join" : [ "", [
                                    { "Fn::FindInMap" :
                                        [
                                            "ShellCommandMap",
                                            { "Ref" : "AppScriptShell" },
                                            "command"
                                        ]
                                    },
                                    " c:\\cfn\\scripts\\make-app ",
                                    { "Ref" : "AppScriptParams" }
                                ]]},
                                "waitAfterCompletion" : "0"
                            }
                        }
                    },
                    "reboot" :
                    {
                        "commands" :
                        {
                            "10-reboot" :
                            {
                                "command" : "powershell.exe \"Restart-Computer -Force -Verbose\"",
                                "waitAfterCompletion" : "forever"
                            }
                        }
                    },
                    "finalize" :
                    {
                        "commands" :
                        {
                            "10-signal-success" :
                            {
                                "command" :
                                { "Fn::Join" : [ "", [
                                    "cfn-signal.exe -e 0",
                                    " --stack ", { "Ref" : "AWS::StackName" },
                                    " --resource SystemPrepInstance",
                                    {
                                        "Fn::If" :
                                        [
                                            "AssignInstanceRole",
                                            { "Fn::Join" : [ "", [
                                                " --role ",
                                                { "Ref" : "InstanceRole" }
                                            ] ] },
                                            ""
                                        ]
                                    },
                                    {
                                        "Fn::If" :
                                        [
                                            "UseCfnUrl",
                                            { "Fn::Join" : [ "", [
                                                " --url ",
                                                { "Ref" : "CfnEndpointUrl" }
                                            ] ] },
                                            ""
                                        ]
                                    },
                                    " --region ", { "Ref" : "AWS::Region"}, "\n"
                                ]]},
                                "ignoreErrors" : "true",
                                "waitAfterCompletion" : "0"
                            }
                        }
                    }
                }
            },
            "Properties" :
            {
                "ImageId" : { "Ref" : "AmiId" },
                "InstanceType" : { "Ref" : "InstanceType" },
                "IamInstanceProfile" :
                {
                    "Fn::If" :
                    [
                        "AssignInstanceRole",
                        { "Ref" : "InstanceRole" },
                        { "Ref" : "AWS::NoValue" }
                    ]
                },
                "Tags" :
                [
                    {
                        "Key" : "Name",
                        "Value" :
                        { "Fn::Join" : [ "", [
                            { "Ref" : "AWS::StackName" }
                        ]]}
                    }
                ],
                "BlockDeviceMappings" :
                [
                    {
                        "DeviceName" : "/dev/sda1",
                        "Ebs" :
                        {
                            "VolumeType" : "gp2",
                            "DeleteOnTermination" : "true"
                        }
                    },
                    {
                        "Fn::If" :
                        [
                            "CreateAppVolume",
                            {
                                "DeviceName" : { "Ref" : "AppVolumeDevice" },
                                "Ebs" :
                                {
                                    "VolumeSize" : { "Ref" : "AppVolumeSize" },
                                    "VolumeType" : { "Ref" : "AppVolumeType" },
                                    "DeleteOnTermination" : "true"
                                }
                            },
                            { "Ref" : "AWS::NoValue" }
                        ]
                    }
                ],
                "KeyName" :
                {
                    "Ref" : "KeyPairName"
                },
                "NetworkInterfaces":
                [
                    {
                        "DeviceIndex" : "0",
                        "AssociatePublicIpAddress" :
                        {
                            "Fn::If" :
                            [
                                "AssignPublicIp",
                                "true",
                                "false"
                            ]
                        },
                        "GroupSet" : { "Ref": "SecurityGroupIds" },
                        "SubnetId": { "Ref" : "SubnetId" }
                    }
                ],
                "UserData" :
                {
                    "Fn::Base64" :
                    { "Fn::Join" : [ "", [
                        "<script>", "\n",

                        "cfn-init.exe -v -c launch",
                        " --stack ", { "Ref" : "AWS::StackName" },
                        " --resource SystemPrepInstance ",
                        {
                            "Fn::If" :
                            [
                                "AssignInstanceRole",
                                { "Fn::Join" : [ "", [
                                    " --role ", { "Ref" : "InstanceRole" }
                                ] ] },
                                ""
                            ]
                        },
                        {
                            "Fn::If" :
                            [
                                "UseCfnUrl",
                                { "Fn::Join" : [ "", [
                                    " --url ", { "Ref" : "CfnEndpointUrl" }
                                ] ] },
                                ""
                            ]
                        },
                        " --region ", { "Ref" : "AWS::Region" }, "\n",

                        "if %ERRORLEVEL% equ 0 goto success\n\n",

                        ":error\n",
                        "cfn-signal.exe -e 1",
                        " --stack ", { "Ref" : "AWS::StackName" },
                        " --resource SystemPrepInstance ",
                        {
                            "Fn::If" :
                            [
                                "AssignInstanceRole",
                                { "Fn::Join" : [ "", [
                                    " --role ", { "Ref" : "InstanceRole"}
                                ] ] },
                                ""
                            ]
                        },
                        {
                            "Fn::If" :
                            [
                                "UseCfnUrl",
                                { "Fn::Join" : [ "", [
                                    " --url ", { "Ref" : "CfnEndpointUrl" }
                                ] ] },
                                ""
                            ]
                        },
                        " --region ", { "Ref" : "AWS::Region" }, "\n",
                        "echo \"ERROR: cfn-init failed! Aborting!\"", "\n",
                        "exit /b 1\n\n",

                        ":success\n",

                        "</script>"
                    ] ] }
                }
            }
        }
    },
    "Outputs" :
    {
        "SystemPrepInstanceId" :
        {
            "Value" : { "Ref" : "SystemPrepInstance" },
            "Description" : "Instance ID"
        }
    }
}
